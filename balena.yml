type: type-product-os-t-type-source@1.2.1
name: Service source
version: 1.5.0
data:
  $transformer: {}
  schema:
    type: object
    required: [ 'data' ]
    properties:
      data:
        type: object
        required: [ 'fragment', 'platforms' ]
        properties:

          # this is a contract fragment, because a service-source could transform into anything. E.g. service or transformer
          fragment:
            type: object

          platforms:
            type: object
            minProperties: 1
            patternProperties:
              .*/.*:
                type: object
            additionalProperties: false

          $transformer:
            type: object
            properties:
              mergeable:
                description: PRs to instances of this type can be merged IF...
                type: boolean
                readOnly: true
                default: false
                $$formula: |
                  EVERY(VALUES(contract.data.platforms), "image") &&
                  contract.data.$transformer.backflow
slug: type-product-os-t-type-source-product-os-t-service-source
